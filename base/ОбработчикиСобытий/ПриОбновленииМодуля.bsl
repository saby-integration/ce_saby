
&НаСервере
Функция ПриОбновленииМодуля(НазваниеПродукта, ВерсияПродукта, ОбщиеНастройки)
	ИнициализацияОбщихНастроекБД(ОбщиеНастройки);
	//Заполним справочник состояний объектов
	Справочники.Saby_СостоянияОбъектов.НачальнаяИнициализация();
	//Создадим ДопСведение - "КЭДО"
	//Проверим настройки подключения
	ПроверкаНастроекПодключенияПослеОбновления();
	Возврат ОбщиеНастройки;
КонецФункции 

Функция ПолучитьПубличныеНастройкиПоУмолчанию() Экспорт
	ПубличныеОбщиеНастройки	= Новый Структура();
	ПубличныеОбщиеНастройки.Вставить("download_attachments_on_complete",		Истина);
	ПубличныеОбщиеНастройки.Вставить("download_attachments_on_update",			Истина);
	ПубличныеОбщиеНастройки.Вставить("refresh_statuses",						Ложь);
	ПубличныеОбщиеНастройки.Вставить("run_docflow",								Истина);
	ПубличныеОбщиеНастройки.Вставить("kedo_mark",								Ложь);
	ПубличныеОбщиеНастройки.Вставить("send_invitations",						Истина);
	ПубличныеОбщиеНастройки.Вставить("send_completed_documents",				Истина);
	ПубличныеОбщиеНастройки.Вставить("pdf_attachments",							Ложь);
	Возврат ПубличныеОбщиеНастройки;
КонецФункции

Функция ИнициализацияОбщихНастроекБД(ОбщиеНастройки)
	Если ТипЗнч(ОбщиеНастройки) <> Тип("Структура") Тогда
		ОбщиеНастройки = Новый Структура();
	КонецЕсли;
	
	ПубличныеОбщиеНастройки = get_prop(ОбщиеНастройки, "public", Новый Структура);
	ПубличныеНастройкиПоУмолчанию = ПолучитьПубличныеНастройкиПоУмолчанию();
	//Обновим список настроек новыми параметрами если они появились в новой версии расширения
	//или заполним значениями по умолчанию в лучае их отсутствия у пользоваетеля
	Для Каждого КлючЗначениеПараметра Из ПубличныеНастройкиПоУмолчанию Цикл
		Если get_prop(ПубличныеОбщиеНастройки, КлючЗначениеПараметра.Ключ) = Неопределено Тогда
			ПубличныеОбщиеНастройки.Вставить(КлючЗначениеПараметра.Ключ, КлючЗначениеПараметра.Значение);
		КонецЕсли;
	КонецЦикла;
	ОбщиеНастройки.Вставить("public", ПубличныеОбщиеНастройки);
	
	//Заполним	версию расширения, для проверки обновления
	ВерсияРасширения	= "0.0.0";
	Если НЕ ОбщиеНастройки.Свойство("ВерсияРасширения", ВерсияРасширения) Тогда
		ВерсияРасширения	= "0.0.0";
		ОбщиеНастройки.Вставить("ВерсияРасширения", ВерсияРасширения);
	КонецЕсли;
КонецФункции

Процедура ВключениеФункциональныхОпций()
	УстановитьПривилегированныйРежим(Истина);
	МетаданныеРасширения = ПолучитьМетаданныеРасширения();
	Если МетаданныеРасширения <> Неопределено Тогда
		Для каждого ФО Из МетаданныеРасширения.ФункциональныеОпции Цикл
			Константы[ФО.Имя].Установить(Истина);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура УбратьПараметрыАвторизации(context_param)  
	context_param.Вставить("session", Неопределено);
	context_param.Вставить("password", Неопределено);
	НастройкиПодключенияЗаписать(context_param);
КонецПроцедуры

Процедура ПроверитьAccount(context_param)
	Попытка 
		accountslist = local_helper_get_accoutslist(context_param);
		Если ТипЗнч(accountslist) <> Тип("Массив") Тогда 
			УбратьПараметрыАвторизации(context_param);
			Возврат;
		КонецЕсли;
		Если accountslist.Количество() > 1 Тогда 
			УбратьПараметрыАвторизации(context_param);
			Возврат;	
		КонецЕсли;
		account = block_obj_get_path_value(accountslist,"0.НомерАккаунта", Неопределено);
		Если ЗначениеЗаполнено(account) Тогда
			context_param.Вставить("account",Строка(account));
			НастройкиПодключенияЗаписать(context_param);
		Иначе
			УбратьПараметрыАвторизации(context_param);	
		КонецЕсли;	
	Исключение
		ИнфОбОшибке = ИнформацияОбОшибке();
		СтруктураОшибки = ExtExceptionAnalyse(ИнфОбОшибке);
		Если СтруктураОшибки.type = "Unauthorized" Тогда 
			УбратьПараметрыАвторизации(context_param);			
		КонецЕсли;
	КонецПопытки;		
КонецПроцедуры	

Процедура ПроверкаНастроекПодключенияПослеОбновления() 
	context_param = НастройкиПодключенияПрочитать(); 
	session = get_prop(context_param, "session", ""); 
	Если ПустаяСтрока(get_prop(context_param, "session", "")) Тогда
		Возврат;		
	КонецЕсли;
	//Проверим наличие параметра account 
	account = get_prop(context_param, "account", "");	
	Если ПустаяСтрока(account) Тогда   
		ПроверитьAccount(context_param);
	КонецЕсли;		
КонецПроцедуры

