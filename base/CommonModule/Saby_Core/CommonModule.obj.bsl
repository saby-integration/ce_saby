#Область include_core_base_Helpers_НастройкиПодключения
#КонецОбласти

#Область include_base_ОбработчикиСобытий_ПриПервомЗапускеКЭДО
#КонецОбласти

#Область include_base_ОбработчикиСобытий_ПриПервомЗапускеЕТРН
#КонецОбласти

#Область include_base_ОбработчикиСобытий_ПриПервомЗапускеБольничные
#КонецОбласти

#Область include_base_ОбработчикиСобытий_ПриПервомЗапуске
#КонецОбласти

#Область include_base_НазваниеПродукта
#КонецОбласти

#Область include_base_FunctionalOption_ИмяФункциональнойОпцииКЭДО
#КонецОбласти

#Область include_base_Role_ИмяОсновнойРолиРасширения
#КонецОбласти

#Область include_base_ИмяОбработки
#КонецОбласти

#Область include_core_base_locale_ЛокализацияНазваниеПродукта
#КонецОбласти

#Область include_core_base_ПроверкаВерсии_ПолучитьИмяФайлаИНомерТекущейВерсии
#КонецОбласти

#Область include_core_base_Helpers_ОбщиеНастройки
#КонецОбласти

#Область include_core_base_Helpers_РаботаСоСвойствамиСтруктуры
#КонецОбласти

#Область include_core_base_ExtException
#КонецОбласти

#Область include_core_base_Helpers_ПолучитьОбработку
#КонецОбласти

#Область include_core_base_Helpers_ПриНачалеРаботыСистемы
#КонецОбласти

#Область include_core_base_Helpers_ДопСведенияИСвойства
#КонецОбласти

#Область include_core_base_Helpers_ПослеОбновления
#КонецОбласти

Функция ЕстьПрофилиСПравамиРасширения()
	УстановитьПривилегированныйРежим(Истина);
	РольIntegration	= Справочники.ИдентификаторыОбъектовРасширений.НайтиПоНаименованию(ИмяОсновнойРоли());
	Если РольIntegration.Пустая() Тогда
		РезультатЗапроса = Ложь;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ПГД.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ПрофилиГруппДоступа.Роли КАК ПГД
			|ГДЕ
			|	ПГД.Роль = &РольIntegration";
		Запрос.УстановитьПараметр("РольIntegration", РольIntegration);
		РезультатЗапроса = Запрос.Выполнить().Выгрузить().Количество() > 0;
	КонецЕсли;
	Возврат РезультатЗапроса;
КонецФункции

#Область include_base_CommonModule_SabyCore_ИмяОсновнойРолиРасширения
#КонецОбласти

Функция ТекущемуПользователюМожноРаботатьСРасширением() Экспорт
	СписокРолей = Новый Массив;
	СписокРолей.Добавить("ПолныеПрава");
	СписокРолей.Добавить(ИмяОсновнойРолиРасширения());
	РольКонфигурации = ПолучитьРольДляДоступаПоУмолчанию();
	Если НЕ ЕстьПрофилиСПравамиРасширения() И ЗначениеЗаполнено(РольКонфигурации) Тогда
		СписокРолей.Добавить(РольКонфигурации);
	Иначе
		СписокРолей.Добавить(ИмяОсновнойРоли());
	КонецЕСли;
	
	РольНайдена = Ложь;
	Для Каждого ИмяРоли Из СписокРолей Цикл
		Если РольДоступна(ИмяРоли) Тогда
			РольНайдена = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат РольНайдена;
КонецФункции

Функция ВключеноИспользованиеПодсистемыКЕДО() Экспорт
	ИспользованиеПодсистемыКЕДО = Ложь;
	ИмяФункциональнойОпцииКЭДО = ИмяФункциональнойОпцииКЭДО();
	Если Метаданные.ФункциональныеОпции.Найти(ИмяФункциональнойОпцииКЭДО) <> Неопределено Тогда
		ИспользованиеПодсистемыКЕДО = ПолучитьФункциональнуюОпцию(ИмяФункциональнойОпцииКЭДО);
	КонецЕсли;
	Возврат ИспользованиеПодсистемыКЕДО;
КонецФункции

Функция ОтправитьПриглашение(СписокСотрудников) Экспорт
	МодульОбъекта = ПолучитьОбъектОбработки();
	Возврат МодульОбъекта.ОтправитьПриглашение(СписокСотрудников);
КонецФункции

Функция ПолучитьДанныеПоСотруднику(Сотрудник) Экспорт
	МодульОбъекта = ПолучитьОбъектОбработки();
	Возврат МодульОбъекта.ПолучитьДанныеПоСотруднику(Сотрудник);	
КонецФункции	

#Область include_base_src_ПроверкаДоступа_ПолучитьРольДляДоступаПоУмолчанию
#КонецОбласти

#Область include_kedo_src_ПодпискиНаСобытия_РасчетаСреднегоЗаработка
#КонецОбласти

#Область include_core_base_ОсобенностиПлатформы_РаботаСоСтроками
#КонецОбласти

#Область include_core_base_ФоновыеЗадания_МодульФоновогоЗаданияСервер
#КонецОбласти

#Область include_core_base_РегламентныеЗадания
#КонецОбласти


Функция ПривестиДанныеКССылочномуВиду( ВхДанные ) Экспорт
	МассивСсылок = Новый Массив;
	Для Каждого ЗаписьСсылка Из ВхДанные Цикл
		ОбъектМетаданных = ЗаписьСсылка.Метаданные();
		Если ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных) Тогда
			МассивСсылок.Добавить(ЗаписьСсылка);
		ИначеЕсли ОбщегоНазначения.ЭтоСправочник(ОбъектМетаданных) Тогда
			МассивСсылок.Добавить(ЗаписьСсылка);
		Иначе
			// Записи регистра сведений и прочее
			СсылкаДанные = get_prop(ЗаписьСсылка, "Ссылка");
			Если СсылкаДанные = Неопределено Тогда
				СсылкаДанные = get_prop(ЗаписьСсылка, "Сотрудник");
			КонецЕсли;
			Если СсылкаДанные <> Неопределено Тогда
				МассивСсылок.Добавить(СсылкаДанные);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат МассивСсылок;
КонецФункции

Функция ОбъектПомеченНаУдаление(ОбъектСсылка) Экспорт
	Возврат ОбъектСсылка.ПометкаУдаления
КонецФункции

